
import java.awt.print.PrinterException;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class Bill extends javax.swing.JFrame {

    /**
     * Creates new form Bill
     */
    public Bill() {
        initComponents();
        jTextArea1.setFont(new java.awt.Font("Monospaced", java.awt.Font.PLAIN, 14));
jTextArea1.setForeground(java.awt.Color.BLACK);
jTextArea1.setBackground(java.awt.Color.LIGHT_GRAY);
jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Invoice Details"));

    }
    String Producttype1;
    String Detail1;
    private String currentUser;
    private String currentUserID;
    private ArrayList<String> selectedLocks;

//    public Bill(String Producttype, String Detail) {
//        initComponents();
//        Producttype1 = Producttype;
//        Detail1 = Detail;
//
////    this.selectedLocks = selectedLocks;
//    }
    public Bill(ArrayList<String> Booking, String Producttype, String Detail, String user) {
    initComponents();
    Producttype1 = Producttype;
    Detail1 = Detail;
    currentUser = user;
    selectedLocks = Booking;

    // ดึงวันที่และเวลาปัจจุบัน
    LocalDateTime currentDateTime = LocalDateTime.now();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm");
    String formattedDate = currentDateTime.format(formatter);

    // คำนวณราคา
    int lockPrice = 250; // ราคาล็อคแต่ละตัว
    int waterCostPerLock = 50;  // ค่าน้ำต่อ Lock
    int electricityCostPerLock = 200; // ค่าไฟต่อ Lock

    int lockTotal = selectedLocks.size() * lockPrice; // รวมราคาล็อค
    int waterTotal = selectedLocks.size() * waterCostPerLock; // รวมค่าน้ำ
    int electricityTotal = selectedLocks.size() * electricityCostPerLock; // รวมค่าไฟ
    int total = lockTotal + waterTotal + electricityTotal; // ยอดรวมทั้งหมด

    // สร้างข้อความในบิล
    StringBuilder text = new StringBuilder();
    text.append("===================================\n");
    text.append("             Night Market          \n");
    text.append("===================================\n\n");
    text.append("Date           : ").append(formattedDate).append("\n");
    text.append("Product Type   : ").append(Producttype1).append("\n");
    text.append("Details        : ").append(Detail1.isEmpty() ? "N/A" : Detail1).append("\n");
    text.append("User           : ").append(currentUser).append("\n\n");
    text.append("Locks Selected : ");
    for (String lock : selectedLocks) {
        text.append(lock).append(", ");
    }
    text.append("\n\n");
    text.append("Price per Lock : ").append(String.format("%,d", lockPrice)).append(" Baht\n");
    text.append("Lock Total     : ").append(String.format("%,d", lockTotal)).append(" Baht\n");
    text.append("Water per Lock : ").append(String.format("%,d", waterCostPerLock)).append(" Baht\n");
    text.append("Water Total    : ").append(String.format("%,d", waterTotal)).append(" Baht\n");
    text.append("Electricity per Lock : ").append(String.format("%,d", electricityCostPerLock)).append(" Baht\n");
    text.append("Electricity Total     : ").append(String.format("%,d", electricityTotal)).append(" Baht\n");
    text.append("-----------------------------------\n");
    text.append("Total          : ").append(String.format("%,d", total)).append(" Baht\n");
    text.append("===================================\n");

    jTextArea1.setText(text.toString());
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButtonConfirmPayment = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel1.setText("Bill");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jButton1.setText("print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jButton2.setText("Home");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButtonConfirmPayment.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jButtonConfirmPayment.setText("Confirm");
        jButtonConfirmPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmPaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jButton1)
                        .addGap(56, 56, 56)
                        .addComponent(jButtonConfirmPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButtonConfirmPayment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 40, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            jTextArea1.print(null, null, true, null, null, true);
        } catch (PrinterException ex) {
//        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Index su = new Index();
        su.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonConfirmPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmPaymentActionPerformed
//        String databaseURL = "jdbc:ucanaccess://C:\\Users\\theerapol\\Downloads\\ProjectKKNew-20241128T103045Z-001\\ProjectKKNew\\reservation.accdb";
//    try (Connection conn = DriverManager.getConnection(databaseURL)) {
//        for (String lockID : selectedLocks) {
//            String updateSQL = "UPDATE LockReservations SET Status = 'Booked' WHERE LockID = ?";
//            PreparedStatement updateStmt = conn.prepareStatement(updateSQL);
//            updateStmt.setString(1, lockID);
//            updateStmt.executeUpdate();
//        }
//        JOptionPane.showMessageDialog(null, "Payment confirmed and locks booked!");
//    } catch (Exception ex) {
//        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
//    }

      boolean updateSuccess = true;

        try (Connection conn = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\tmgam\\Desktop\\ProjectKKNew\\reservation.accdb")) {
            for (String lockID : selectedLocks) {
                // อัปเดตสถานะล็อค
                String updateSQL = "UPDATE LockReservations SET Status = true WHERE LockID = ?";
                PreparedStatement updateStmt = conn.prepareStatement(updateSQL);
                updateStmt.setString(1, lockID);

                int rowsAffected = updateStmt.executeUpdate();
                if (rowsAffected == 0) {
                    updateSuccess = false;
                    break;
                }

                // เพิ่มข้อมูลการจองใน Reservations หากอัปเดตสถานะสำเร็จ
                if (updateSuccess) {
                    String insertSQL = "INSERT INTO Reservations (ProductType, AdditionalInfo, LockID, UserName) VALUES (?, ?, ?, ?)";
                    PreparedStatement insertStmt = conn.prepareStatement(insertSQL);

                    insertStmt.setString(1, Producttype1); // ประเภทสินค้า
                    insertStmt.setString(2, Detail1);      // รายละเอียด
                    insertStmt.setString(3, lockID);       // รหัสล็อค
                    insertStmt.setString(4, currentUser);  // ชื่อผู้ใช้

                    insertStmt.executeUpdate();
                }
            }

            if (updateSuccess) {
                JOptionPane.showMessageDialog(null, "Locks updated and reservations added successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Error: Some locks could not be updated!");
            }
        Index indexPage = new Index(currentUser);
        indexPage.setVisible(true);
        this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButtonConfirmPaymentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bill().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonConfirmPayment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
